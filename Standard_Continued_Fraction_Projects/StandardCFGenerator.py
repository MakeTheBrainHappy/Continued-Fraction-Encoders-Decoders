import math 
from decimal import *
import matplotlib.pyplot as plt
 

def main():

    getcontext().prec = 1024
    value = Decimal("1.539600717839002038691063414671886548393604670053671669382939537290607126141155588516574388228665400600556570147028180471084395639999068870054804899639443243136082872802049406282644284534297488820680013610971792802953677022819781927930522641090708561475882543633794711099144337652790637911420005845378450327420559649867508979721946955629462959576853184886924288451812190634518148753088145764078093686815962723394092147654082821138572780725424078493799912595576462854350478840880850102930744149776064799549596874918240699029870212212175588962059838072351993762673634402557381256328500721869962012461554761571761066034111681014597348215779646553772685183164354186200877923812353596575855963013536759869247623141202496057228419861920941946420331435790358953479731928907729319249136392161143586228475725911125946039480427418730024127999789268297448513278543906764557465456663979151984401589823089225790116146632810633087072987160215932198393064656233388116861192918092192607056577432815155323410129329722796229041647443229445254133027044110964255286760209775794837620951306938046969231924813307619937385961516624452906823078387442458986644696589716515689480758853908736478778597564961973787025493573597782043313848410362755926269050613350307318633045283461040221618153503141662055523306765498009852683475821973609957422278673045666295471292308937953137718931213249873684431594865178670238978936561387684343864250301589478440166457837018119891199255623682552987769637393792678681866758171716191569058632571076361812807225970580904438187879114790818160925558784290694153402069298037668086884921862639213993013710427361770957882135027932899959891126100174315852172636634315906314885025902336473784723229733205987917070202081982055076482600475112534583058204041915141820806463766805566548043703680207116456236216951206966096416402056142638003982667024213902143973655305424817990104133965348595022486105564145333369684725523763044647072741392900862387468469653970455242438660844056529607184115948965750638686765251789647118894766758631708618136938652559033756439831111797384391315597931785600081346107990644839892584170039696963174110188013811375680232949662976040953750562417409502008675223203697024584513591806519982726968909245806268567942554467143614601819401666035523059018438814287772840518299091460633764713020619906970202818236991068934900703994399613995131234766683638703455101659393271945090155321712179620436415849914783952430558147075480821269589079729021576912363745462803592572961324623951777261604683557879086796516502285724091738735564972611376253150209951333301480189457524705421708353259241844610876256559525429831262603439649598572491472362160721629678824783611231881916451908231329199315505723437386448280393727494184229751989524856098898459354726990730291609464397777555870706274945143599279866076953553445597701989542832813189183434098918780358955413478939263650826532203160749272310423193991614184492134343781906122519362945303684048160347397243540706334528903263219570604106186817173885362701995436650360892059361611949423019172183771525029491062731275569450306144450987731611975899081103401949928379300401289242239047389765504747825115723049928013041265594999758519417468872927818719762551658911031948086100111380052346460862593335113902455364169820486208028833694761544666335202233520535165211255861036489060347461189617783192203281672743859877061247576112826994323374943579508442570601453586124379570239844890891487626103361452949430144954766825225066177575791509595484834490046029819110412065806925846673587557596820892689775109001705545257642128687868056490747751967391856919615279480261650702802734298035710444238387113675801195510735510320375557736642805389882758670997119251584703820771120059676533392193392044065570468544822477602204379306807996816833566236545882924355273738580010361236819879995611422249508278198673112647038754045435802259821201675832678750920891664945534309662089162942979684973998541827302879428118827435396514481108489805894728516981643332292991017026298093832866666041669293421587135487635779386954459432541860046706062182139929493101472953434884736844824975423144860210364565260020112943317611190622842342056158003960948092067751540450581533679550993537352289528683774157929476236281385154377828064795252320816915239450031162542008388894579952055219072076096484666001216292226527501096640179282054782606849464942344522610539308031189170528069354037390776145610037130931335756027622365674384119648513599870778330739520561454239294516416458858872587274194544992552445621203811014492884553915747880552262388867138645840568848915449267242080495809058977362702123238285717142268451543326638650118201191824156708494628633921954050514990781050864248821170147869486754020633848634837934477258383272746636902311384009623736114368014149611306314701265369495636892974013260772046768714191208257685831077181970140887231735931315219680234444973795508890327205203976906457752527792304345395290650856929253519682585233998987544194556884267409728437275092383405405135769633809423904203144097861242747737647318213738309799197234827115108483411924484965466783024806303383250195276407972647356865568232074481511364168032594373775714818133292832293711871820261402017720256845189179657206334027227806870533229675596379653875134278114719746715507473137637050445944036893398184642991289780678961314203920706317916894550517922700627574861823530624036629759668665368099190491437014293063992466498912870355551202364955138776783461275484185712836209545326172703967117583066967692713011388746183237753266299400004880453139705262129025846811597021031336188285792940930205954675867573694258470269762129295183203255824372718074257349864452308549817593911417779182564186175870757415255052802487519033308491503801566672442632762875356938916288836039500133864692834737953710489026631054853695985700473884441659142238108719107443863094267031597203216637039118757912775741783384793075066533714328305448440381609752977252084965241596444822953741712839030732542370475376080704791781408301154664520505786197300665692731880921220344373757493242477617488701630791199323374158589582648068073118383274258303515907386693092562381968172759162091699036309315817254988472286683603636968016997560284136655460316720347366895929336390616542720647293213994590797582649531880824284601472198227289879720525523956440449213320571880452911532422219113625622153650630305056030039993124142099616731912155017330038339543098560225954975196623145732597312944229917570406772202981246519828377851942799588840558498451188610557811697241853689510132640147603933356722518116257595472929372737376438106833418756232913298943163264021910702196053757724089840602151621976522285119133090238695367920198782555077337528571022896481454902868348477478701528424381058387456725164181554096191243676177138733397606956842139305542052875150699791049833708960299785348573462049299623685410432379778207125166260819334994948185386674075818608379329664887764508111262489396584122822490046584009804142445294099931164701390821450584889495225764083614303544308976765685253377240947479570859138380161720508611249653391384656793885266710278048334223802537290902235738860893351500724400545529801849012625574005598071692095800654784526990876965240267694382238059588357582809520067947561114666948341366891553888840493083559332403688428658716398076255619558449747952998905280296472492730137117704407093386931829592685607352378259972651259061465211376467304866896199716640419516875263768792925411483897289587854017588345594590865046059391303739386857382753896313000945486804793010624226775839037082157083469827532580364859784950438988894309870107874548648279368212588474962434942571181905410360516748915708898154532983831369083843666478515957310783645962191312030487925736951954183314732603710230232207877684786262484420643816353161066908167347448898852431312111411384025293850176513557166164741829443144905275939818858030966189332372676947303481757747705106240276843303358281733090270966392881304546498486638662412812886392236554896186074700807497914328621299749988863936421752821398245611404261743617919730442389465278153400509780692395101869344584526399822487797344258257470429894931689210817500977052329329686251117385901917452827674164889579315103902462905435515407995260199255791568649951260010383750221222922650825236524231169520007446017270697200491456096585699294896641062363876879211398295383860729952064044638786949688196533079845880096328058409867226792453959178409853761220951408430876787670198939707245568441314523858000107677563096837676177405684858450278886761214575248713389843321244133197560384763429963995952880561498004549866558196510705918958894569232609443596113224124762318422395461909806896453018786979209657227205515323602509870269346406144287140121384047868227000768009109837432362998319028389133053149329455009935174389923624345018870652189171572596473027488133387376627309257203903335073216682865607909551018644175534916464645514235478137721673145699117999152343975379367335901072384432709613330410660898010265074939897242250903822744341608362292398289065034503872092901491888381013370276762436544614488292790186393146752036027558428296730540247821642860802036741988505708346507301649004323836007803118216623586870729776750029296726551897529511150819216622474946111417043928443533180576343683104659393760400908262487958143581809658845367309668611482221062695362812716583685276527517660108463069674516563329372050728296313209369864516272223562283628460878910874091279221552336663404293085069942061713770677576591410508888660600519279645832924956871374732240569923491875613877713291371577130558391749587245731973240799049586148156730656509628521458088142511841668593124448583380259799695458381728582120612308440240174276551060231285080000951076100611281533861243280635672795347947575922899857596647775157284690788757052055133399580059109542997253344474599120916732470536064627418122573830810698360965639627886454157284595453880520597977414974865100153234579915226798068630272806513276222978900789524729228268263734427024")
    print value
    bList = [] # Stores the b values for the continued fraction
    for n in range(0,1000):
        bList.append(math.floor(value))
        value = 1/(value - Decimal(value).quantize(Decimal('1.'), rounding=ROUND_DOWN))
    print(bList)
    f= open("LiebsSquareIceConstantStandardCF.txt","w+")
    for i in range(0, 1000):
        f.write(str(bList[i]))
        f.write("\r\n")
    f.close() 
    
    plt.plot(bList)
    plt.xlabel('term in the Standard Continued Fraction')
    plt.ylabel('Value')
    plt.title('Liebs Square Ice Constant Standard CF')
    plt.show()

	
#call to main
main()
